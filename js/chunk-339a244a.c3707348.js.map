{"version":3,"sources":["webpack:///./src/views/SingIn.vue?4628","webpack:///./src/views/SingIn.vue?77e6","webpack:///./src/views/SingIn.vue","webpack:///./src/config/error-codes.ts","webpack:///./src/utils/error.ts","webpack:///./src/config/date-time-filter.options.ts","webpack:///./src/filter/dateTime.filter.ts","webpack:///./src/config/skip-auto-config.ts","webpack:///./src/use/use.skip-auto.ts"],"names":["_hoisted_1","key","class","_hoisted_2","_createElementVNode","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","render","_ctx","_cache","$props","$setup","$data","$options","_component_router_link","_resolveComponent","_component_news_input_row","isAuth","_openBlock","_createElementBlock","_Fragment","_createTextVNode","_createVNode","to","default","_withCtx","_","action","id","formId","novalidate","onSubmit","_withModifiers","args","formName","inputType","inputName","label","description","controlValue","form","email","$event","errors","v$","$errors","password","type","disabled","isFormLoading","isAttemptsExeed","isSubmitBlocked","_normalizeClass","_toDisplayString","dateTimeFilter","blockedUntilDate","_createCommentVNode","defineComponent","name","setup","store","useStore","router","useRouter","ref","reactive","formRules","required","minLength","useVuelidate","getters","isDisabled","attemptCount","useSkipAuto","async","value","$touch","$error","result","data","dispatch","push","Date","now","text","error","message","closable","autoClosable","e","components","NewsInputRow","__exports__","ERROR_CODES","EMAIL_NOT_FOUND","INVALID_PASSWORD","TOO_MANY_ATTEMPTS_TRY_LATER","USER_DISABLED","EMAIL_EXISTS","SING_UP_OPERATION_NOT_ALLOWED","auth","code","DATE_TIME_FILTER_OPTIONS","day","month","year","hour","minute","second","date","Intl","DateTimeFormat","format","DISABLED_INTERVAL","MAX_ATTEMPT_COUNT","authType","storeParam","blockedUntil","computed","getTime","watch","newValue","newBlockedUntil","payload","setMilliseconds","getMilliseconds","setTimeout"],"mappings":"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","file":"js/chunk-339a244a.c3707348.js","sourcesContent":["import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, toDisplayString as _toDisplayString, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"text\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Вы уже авторизованы на сайте\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Можете продолжить гулять по сайту с помощью главного меню\", -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"text\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_7 = [\"id\"]\nconst _hoisted_8 = { class: \"form__table\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"td\", { class: \"form__table-cell\" }, null, -1)\nconst _hoisted_10 = { class: \"form__table-cell form__table-cell--wide\" }\nconst _hoisted_11 = [\"disabled\"]\nconst _hoisted_12 = { key: 0 }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_14 = { class: \"control-description is-error\" }\nconst _hoisted_15 = { class: \"nowrap\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_router_link = _resolveComponent(\"router-link\")!\n  const _component_news_input_row = _resolveComponent(\"news-input-row\")!\n\n  return (_ctx.isAuth)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4))\n    : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"p\", null, [\n            _createTextVNode(\" Если у вас еще нет учетной записи, вы можете \"),\n            _createVNode(_component_router_link, { to: \"singup\" }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"зарегистрироваться\")\n              ]),\n              _: 1\n            }),\n            _createTextVNode(\". \")\n          ]),\n          _hoisted_6\n        ]),\n        _createElementVNode(\"form\", {\n          action: \"#\",\n          id: _ctx.formId,\n          class: \"form\",\n          novalidate: \"\",\n          onSubmit: _cache[2] || (_cache[2] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onSubmit && _ctx.onSubmit(...args)), [\"prevent\"]))\n        }, [\n          _createElementVNode(\"table\", _hoisted_8, [\n            _createElementVNode(\"tbody\", null, [\n              _createVNode(_component_news_input_row, {\n                formName: _ctx.formId,\n                inputType: \"email\",\n                inputName: \"email\",\n                label: \"Email *\",\n                description: \"Поле обязательно к заполнению\",\n                controlValue: _ctx.form.email,\n                \"onUpdate:controlValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.form.email) = $event)),\n                errors: _ctx.v$.email.$errors\n              }, null, 8, [\"formName\", \"controlValue\", \"errors\"]),\n              _createVNode(_component_news_input_row, {\n                formName: _ctx.formId,\n                inputType: \"password\",\n                inputName: \"password\",\n                label: \"Пароль *\",\n                description: \"Поле обязательно к заполнению\",\n                controlValue: _ctx.form.password,\n                \"onUpdate:controlValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.form.password) = $event)),\n                errors: _ctx.v$.password.$errors\n              }, null, 8, [\"formName\", \"controlValue\", \"errors\"]),\n              _createElementVNode(\"tr\", null, [\n                _hoisted_9,\n                _createElementVNode(\"td\", _hoisted_10, [\n                  _createElementVNode(\"button\", {\n                    type: \"submit\",\n                    disabled: _ctx.isFormLoading || _ctx.isAttemptsExeed || _ctx.isSubmitBlocked,\n                    class: _normalizeClass(['button', {'is-loading': _ctx.isFormLoading}])\n                  }, \"Отправить\", 10, _hoisted_11),\n                  (_ctx.isSubmitBlocked)\n                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [\n                        _hoisted_13,\n                        _createElementVNode(\"small\", _hoisted_14, [\n                          _createTextVNode(\" Превышено максимальное количество попыток авторизоваться. Возможность авторизоваться заблокирована до \"),\n                          _createElementVNode(\"span\", _hoisted_15, _toDisplayString(_ctx.dateTimeFilter(_ctx.blockedUntilDate)), 1)\n                        ])\n                      ]))\n                    : _createCommentVNode(\"\", true)\n                ])\n              ])\n            ])\n          ])\n        ], 40, _hoisted_7)\n      ], 64))\n}","\r\nimport {defineComponent, ref, reactive} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {useSkipAuto} from \"@/use/use.skip-auto\";\r\nimport {useVuelidate} from '@vuelidate/core'\r\nimport {required, email, minLength } from '@vuelidate/validators'\r\nimport NewsInputRow from \"@/components/News/NewsInputRow.vue\";\r\nimport {dateTimeFilter} from \"@/filter/dateTime.filter\";\r\nimport {error} from \"@/utils/error\";\r\n\r\nexport default defineComponent({\r\n  name: \"Auth\",\r\n  setup () {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const formId = ref('auth')\r\n    const form = reactive({ email: '', password: '' })\r\n    const formRules = {\r\n      email: { required, email }, // Matches from.email\r\n      password: { required, minLength: minLength(6) }, // Matches form.password\r\n    }\r\n    const v$ = useVuelidate(formRules, form)\r\n    const isAuth = store.getters[\"auth/isAuth\"]\r\n\r\n    const { isDisabled, isFormLoading, isSubmitBlocked, isAttemptsExeed,\r\n      blockedUntilDate, attemptCount} = {...useSkipAuto('singIn')}\r\n\r\n    async function onSubmit() {\r\n      v$.value.$touch()\r\n      if (v$.value.$error) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        isFormLoading.value = true\r\n        let {result, data} = await store.dispatch('auth/login', form)\r\n        if (result) {\r\n          await store.dispatch('profile/fetchProfile')\r\n          await router.push('/profile')\r\n        } else {\r\n          await store.dispatch('alerts/alertAdd', {\r\n            id: Date.now(),\r\n            text: error(data.error.message),\r\n            type: 'error',\r\n            closable: true,\r\n            autoClosable: false\r\n          })\r\n          attemptCount.value ++\r\n        }\r\n      } catch (e) {\r\n      } finally {\r\n        isFormLoading.value = false\r\n      }\r\n    }\r\n\r\n    return {\r\n      formId,\r\n      form,\r\n      v$,\r\n      isAuth,\r\n      isDisabled,\r\n      isFormLoading,\r\n      isSubmitBlocked,\r\n      isAttemptsExeed,\r\n      blockedUntilDate,\r\n      onSubmit,\r\n      dateTimeFilter\r\n    }\r\n  },\r\n  components: {NewsInputRow}\r\n})\r\n","import { render } from \"./SingIn.vue?vue&type=template&id=089d3b2f&ts=true\"\nimport script from \"./SingIn.vue?vue&type=script&lang=ts\"\nexport * from \"./SingIn.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"C:\\\\Programming\\\\LDV spa\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","interface ErrorCodes {\r\n  [key: string] : string\r\n}\r\n\r\nconst ERROR_CODES : ErrorCodes = {\r\n  EMAIL_NOT_FOUND: 'Пользователь с таким email не был найден',\r\n  INVALID_PASSWORD: 'Пароль неверный',\r\n  TOO_MANY_ATTEMPTS_TRY_LATER: 'Превышено максимальное количество попыток зарегистрироваться.',\r\n  USER_DISABLED: 'Учетная запись пользователя отключена администратором',\r\n  EMAIL_EXISTS: 'Пользователь с таким адресом электронной почты уже зарегистрирован',\r\n  SING_UP_OPERATION_NOT_ALLOWED: 'Для этого сайта недоступна регистрация с помощью лектронной почты и пароля',\r\n  auth: 'Пожалуйста войдите в систему'\r\n}\r\n\r\nexport default ERROR_CODES\r\n\r\n","import ERROR_CODES from '@/config/error-codes'\r\n\r\nexport function error(code: string) : string{\r\n  return ERROR_CODES[code] ? ERROR_CODES[code] : 'Неизвестная ошибка'\r\n}","export const DATE_TIME_FILTER_OPTIONS = {\r\n  day: '2-digit',\r\n  month: 'long',\r\n  year: 'numeric',\r\n  hour: '2-digit',\r\n  minute: '2-digit',\r\n  second: '2-digit'\r\n}","import {DATE_TIME_FILTER_OPTIONS} from \"@/config/date-time-filter.options\";\r\n\r\nexport function dateTimeFilter(date: Date) {\r\n  return Intl.DateTimeFormat('ru-Ru', DATE_TIME_FILTER_OPTIONS).format(date)\r\n}","export const DISABLED_INTERVAL = 1000*50\r\nexport const MAX_ATTEMPT_COUNT = 3","import {computed, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {DISABLED_INTERVAL, MAX_ATTEMPT_COUNT} from \"@/config/skip-auto-config\";\r\nimport {skipAutoState} from \"@/store/skipAuto/types\";\r\n\r\ntype authTypes = 'singUp' | 'singIn'\r\n\r\nexport function useSkipAuto (authType :authTypes) {\r\n  const store = useStore()\r\n  const attemptCount = ref(0)\r\n  const isFormLoading = ref(false)\r\n  const storeParam = `skipAuto/${authType}`\r\n  const blockedUntil = computed(() => store.getters[storeParam])\r\n  const blockedUntilDate = computed(() => new Date(blockedUntil.value))\r\n  const isAttemptsExeed = computed(() => attemptCount.value >= MAX_ATTEMPT_COUNT)\r\n  const isSubmitBlocked = computed( () => blockedUntilDate.value ? blockedUntilDate.value.getTime() > Date.now() : false)\r\n  const isDisabled = computed(() => {\r\n    isFormLoading.value || isSubmitBlocked.value\r\n  })\r\n\r\n  watch(isAttemptsExeed, (newValue: boolean) => {\r\n    let newBlockedUntil = new Date();\r\n    let payload = {}\r\n\r\n    if (!newValue) {\r\n      return\r\n    }\r\n\r\n    newBlockedUntil.setMilliseconds(newBlockedUntil.getMilliseconds() + DISABLED_INTERVAL)\r\n    //@ts-ignore\r\n    payload[authType] = newBlockedUntil\r\n\r\n    store.dispatch('skipAuto/setParam', payload)\r\n    setTimeout(\r\n      () => {\r\n        attemptCount.value = 0\r\n        store.dispatch('skipAuto/setParam', {'singUp': null})\r\n      },\r\n      DISABLED_INTERVAL\r\n    )\r\n  })\r\n\r\n return {\r\n   isDisabled,\r\n   isFormLoading,\r\n   isSubmitBlocked,\r\n   isAttemptsExeed,\r\n   attemptCount,\r\n   blockedUntilDate\r\n }\r\n}\r\n"],"sourceRoot":""}